find_package(doctest 2.3.3 REQUIRED)

add_executable(@NEW_PROJECT_NAME_LOWER@-unit-tests test_main.cpp)
target_sources(@NEW_PROJECT_NAME_LOWER@-unit-tests PRIVATE @NEW_PROJECT_NAME_LOWER@/test.cpp)
target_link_libraries(@NEW_PROJECT_NAME_LOWER@-unit-tests
    PRIVATE
        @NEW_PROJECT_NAME@::library
        doctest::doctest
)

find_program(GCOVR_EXECUTABLE gcovr)
if(@NEW_PROJECT_NAME_UPPER@_COVERAGE AND GCOVR_EXECUTABLE)
    message(STATUS "Измерение покрытия кода тестами включено")

    target_compile_options(@NEW_PROJECT_NAME_LOWER@-unit-tests PRIVATE --coverage)
    target_link_libraries(@NEW_PROJECT_NAME_LOWER@-unit-tests PRIVATE gcov)

    target_compile_options(@NEW_PROJECT_NAME_LOWER@_library PRIVATE --coverage)
    target_link_libraries(@NEW_PROJECT_NAME_LOWER@_library PRIVATE gcov)

    add_custom_target(coverage
        COMMAND
            ${GCOVR_EXECUTABLE}
                --root=${PROJECT_SOURCE_DIR}/
                --filter=${PROJECT_SOURCE_DIR}/include
                --filter=${PROJECT_SOURCE_DIR}/src
                --object-directory=${PROJECT_BINARY_DIR}
        DEPENDS
            check
    )
elseif(@NEW_PROJECT_NAME_UPPER@_COVERAGE AND NOT GCOVR_EXECUTABLE)
    set(@NEW_PROJECT_NAME_UPPER@_COVERAGE OFF)
    message(WARNING "Для замеров покрытия кода тестами требуется программа gcovr")
endif()

add_custom_target(check ALL COMMAND @NEW_PROJECT_NAME_LOWER@-unit-tests)
